name: Manual Dependabot
on:
  workflow_dispatch:


jobs:
  dependabot:
    name: 'Dependabot'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
    - name: Install GitHub CLI
      run: |
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
        && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
        && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
        && sudo apt update \
        && sudo apt install gh -y

    - name: Trigger Dependabot
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          /repos/${{ github.repository }}/dispatches \
          -f event_type='dependency-update'

    - name: Wait for a moment
      run: sleep 30

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT_TOKEN }}

    - name: Check and merge PRs
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        # List all open PRs with dependency labels or from dependabot
        gh pr list --json number,author,labels,title,statusCheckRollup --jq '.[] | select((.author.login == "dependabot[bot]") or (.labels | map(.name) | contains(["dependencies"])))' | while read -r pr_json; do
          pr_number=$(echo "$pr_json" | jq -r '.number')
          if [ ! -z "$pr_number" ]; then
            echo "Processing PR #$pr_number"
            
            # Check if there are any failed checks
            failed_checks=$(echo "$pr_json" | jq -r '.statusCheckRollup[] | select(.conclusion == "failure" or .status == "in_progress") | .context' 2>/dev/null)
            
            if [ ! -z "$failed_checks" ]; then
              echo "Found failed or in-progress checks for PR #$pr_number, re-running them..."
              gh pr check-run-list "$pr_number" --json databaseId | jq -r '.[].databaseId' | while read -r run_id; do
                gh api -X POST "/repos/${{ github.repository }}/check-runs/$run_id/rerequest" || true
              done
              
              echo "Waiting for checks to complete..."
              sleep 60  # Give checks some time to run
            fi
            
            echo "Enabling auto-merge for PR #$pr_number"
            gh pr merge "$pr_number" --auto --merge || true
          fi
        done

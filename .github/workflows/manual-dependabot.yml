name: Manual Dependabot
on:
  workflow_dispatch:


jobs:
  dependabot:
    name: 'Dependabot'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
    - name: Install GitHub CLI
      run: |
        type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
        && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
        && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
        && sudo apt update \
        && sudo apt install gh -y

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT_TOKEN }}
        fetch-depth: 0

    - name: Close existing PRs
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        # Close all open dependency-related PRs
        gh pr list --json number,author,labels --jq '.[] | select((.author.login == "dependabot[bot]") or (.labels | map(.name) | contains(["dependencies"]))) | .number' | while read -r pr; do
          if [ ! -z "$pr" ]; then
            echo "Closing PR #$pr"
            gh pr close "$pr" --comment "Closing to recreate with latest changes"
          fi
        done

    - name: Create fresh dependency PR
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        # Configure git
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

        # Create a new branch for dependencies
        git checkout -b "deps/update-all"

        # Update requirements.txt with latest versions
        echo "requests>=2.31.0" > requirements.txt.tmp
        tail -n +2 requirements.txt >> requirements.txt.tmp
        mv requirements.txt.tmp requirements.txt

        # Commit and push changes
        git add requirements.txt
        git commit -m "build(deps): update all dependencies to latest versions"
        git push -f origin deps/update-all

        # Create PR
        gh pr create \
          --title "build(deps): update all dependencies" \
          --body "Update all dependencies to their latest versions" \
          --label "dependencies" \
          --label "python" \
          --base main

        # Wait for checks to complete
        echo "Waiting for checks to complete..."
        sleep 180

        # Enable auto-merge
        pr_number=$(gh pr list --json number,headRefName --jq '.[] | select(.headRefName == "deps/update-all") | .number')
        if [ ! -z "$pr_number" ]; then
          echo "Enabling auto-merge for PR #$pr_number"
          gh pr merge "$pr_number" --auto --merge || true
        fi
